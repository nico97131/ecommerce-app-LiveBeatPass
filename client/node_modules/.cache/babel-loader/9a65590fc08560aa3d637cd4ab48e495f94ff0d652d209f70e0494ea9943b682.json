{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nicol\\xE1s\\\\diplomatura\\\\ecommerce\\\\ecommerce-app\\\\client\\\\src\\\\pages\\\\LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './LoginForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = ({\n  onLogin\n}) => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    try {\n      console.log('Intentando iniciar sesión con:', {\n        email,\n        password\n      }); // Log de las credenciales ingresadas\n\n      const response = await fetch('http://localhost:5000/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      console.log('Respuesta del servidor:', response.status); // Log del estado de la respuesta\n\n      if (response.ok) {\n        const {\n          token,\n          user\n        } = await response.json();\n        console.log('Datos completos del usuario recibidos:', user); // Log para depuración\n        localStorage.setItem('token', token); // Guarda el token en localStorage\n        console.log('Token guardado en localStorage:', token); // Log adicional\n\n        onLogin({\n          email: user.email || '',\n          firstName: user.firstName || 'No disponible',\n          lastName: user.lastName || 'No disponible',\n          phone: user.phone || 'No disponible',\n          dni: user.dni || '',\n          street: user.street || '',\n          city: user.city || '',\n          state: user.state || '',\n          zipCode: user.zipCode || '',\n          role: user.role // Asegúrate de pasar el rol recibido\n        }); // Envía todos los datos al estado global\n\n        console.log('Datos pasados a onLogin:', {\n          email: user.email || '',\n          firstName: user.firstName || 'No disponible',\n          lastName: user.lastName || 'No disponible',\n          phone: user.phone || 'No disponible',\n          dni: user.dni || '',\n          street: user.street || '',\n          city: user.city || '',\n          state: user.state || '',\n          zipCode: user.zipCode || '',\n          role: user.role\n        }); // Log para confirmar datos enviados a onLogin\n\n        navigate('/'); // Redirige a la página principal\n      } else {\n        const errorMessage = await response.text();\n        console.log('Error de autenticación:', errorMessage); // Log del error recibido\n        setError(errorMessage);\n      }\n    } catch (err) {\n      console.error('Error al conectar con el servidor:', err); // Log del error de conexión\n      setError('Error al conectar con el servidor.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"login-form\",\n    onSubmit: handleSubmit,\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Contrase\\xF1a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn\",\n      children: \"Iniciar Sesi\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"04s5JR+/x8JdloJ2sm+29L/IvyI=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","LoginForm","onLogin","_s","email","setEmail","password","setPassword","error","setError","navigate","handleSubmit","e","preventDefault","console","log","response","fetch","method","headers","body","JSON","stringify","status","ok","token","user","json","localStorage","setItem","firstName","lastName","phone","dni","street","city","state","zipCode","role","errorMessage","text","err","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/Nicolás/diplomatura/ecommerce/ecommerce-app/client/src/pages/LoginForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './LoginForm.css';\r\n\r\nconst LoginForm = ({ onLogin }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n\r\n    try {\r\n      console.log('Intentando iniciar sesión con:', { email, password }); // Log de las credenciales ingresadas\r\n\r\n      const response = await fetch('http://localhost:5000/api/login', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      console.log('Respuesta del servidor:', response.status); // Log del estado de la respuesta\r\n\r\n      if (response.ok) {\r\n        const { token, user } = await response.json();\r\n        console.log('Datos completos del usuario recibidos:', user); // Log para depuración\r\n        localStorage.setItem('token', token); // Guarda el token en localStorage\r\n        console.log('Token guardado en localStorage:', token); // Log adicional\r\n\r\n        onLogin({\r\n          email: user.email || '',\r\n          firstName: user.firstName || 'No disponible',\r\n          lastName: user.lastName || 'No disponible',\r\n          phone: user.phone || 'No disponible',\r\n          dni: user.dni || '',\r\n          street: user.street || '',\r\n          city: user.city || '',\r\n          state: user.state || '',\r\n          zipCode: user.zipCode || '',\r\n          role: user.role, // Asegúrate de pasar el rol recibido\r\n        }); // Envía todos los datos al estado global\r\n\r\n        console.log('Datos pasados a onLogin:', {\r\n          email: user.email || '',\r\n          firstName: user.firstName || 'No disponible',\r\n          lastName: user.lastName || 'No disponible',\r\n          phone: user.phone || 'No disponible',\r\n          dni: user.dni || '',\r\n          street: user.street || '',\r\n          city: user.city || '',\r\n          state: user.state || '',\r\n          zipCode: user.zipCode || '',\r\n          role: user.role,\r\n        }); // Log para confirmar datos enviados a onLogin\r\n\r\n        navigate('/'); // Redirige a la página principal\r\n      } else {\r\n        const errorMessage = await response.text();\r\n        console.log('Error de autenticación:', errorMessage); // Log del error recibido\r\n        setError(errorMessage);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error al conectar con el servidor:', err); // Log del error de conexión\r\n      setError('Error al conectar con el servidor.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"login-form\" onSubmit={handleSubmit}>\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n      <div className=\"form-group\">\r\n        <label>Email</label>\r\n        <input\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Contraseña</label>\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <button type=\"submit\" className=\"btn\">Iniciar Sesión</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}